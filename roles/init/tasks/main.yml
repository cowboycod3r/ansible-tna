---
# tasks for init

# hostname ---------------------------------------------------------------------

- name: set the hostname
  hostname: name="{{ host_name }}"
  notify:
    - reboot
    - waiting for come back

- name: update hosts file
  lineinfile: dest=/etc/hosts regexp="^127.0.1.1" line="127.0.1.1\t{{ host_name }}"
  notify:
    - reboot
    - waiting for come back




# tasks for pi wifi ------------------------------------------------------------
- name: wifi dir
  file: path=/etc/wpa_supplicant state=directory
  when: wifi == true
  tags:
    - deploy

- name: wifi config file
  template: src=wpa_supplicant.conf.j2 dest=/etc/wpa_supplicant/wpa_supplicant.conf backup=yes
  when: wifi == true
  notify:
    - reboot
    - waiting for come back




# install most important packages ----------------------------------------------

- name: install tools and libs
  apt: name={{ item }} state=latest
  with_items:
    - fish
    - vim
    - git
    - nmap
    - tree
    - build-essential
    - python-passlib




# create users and provide public key ------------------------------------------

# use mkpasswd --method=SHA-512 to generate hash
- name: create me as new user
  user: name={{ me }} password={{ unix_default_password_hash }}

- name: check the owner of home dir
  file: path=/home/{{ me }} owner={{ me }} group={{ me }} recurse=yes

- name: add me to sudoers
  lineinfile: dest=/etc/sudoers state=present regexp="^{{ me }}" line="{{ me }}   ALL=(ALL:ALL) ALL" insertafter="^root"

# public keys
- name: install my public key for me and the remote user
  authorized_key: user="{{ item }}" key="{{ me_key }}" manage_dir=yes
  with_items:
    - "{{ me }}"
    - "{{ ansible_ssh_user }}"

- name: install ssh user public key for the current ssh user
  authorized_key: user="{{ ansible_ssh_user }}" key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}" manage_dir=yes




# get fish-config and vim-config for all users ---------------------------------

- name: clone fish-config from github
  git: repo=https://github.com/cowboycod3r/fish-config.git dest="/home/{{ item }}/.config/fish"
  with_items:
    - "{{ me }}"
    - "{{ ansible_ssh_user }}"

- name: create locale fish config file
  template: src=config.local.fish.j2 dest="/home/{{ item }}/.config/fish/config.local.fish" owner="{{ item }}"
  with_items:
    - "{{ me }}"
    - "{{ ansible_ssh_user }}"

- name: switch to fish
  command: chsh -s /usr/bin/fish "{{ item }}"
  changed_when: False
  with_items:
    - "{{ me }}"
    - "{{ ansible_ssh_user }}"

- name: clone vim-config from github
  git: repo=https://github.com/cowboycod3r/vim-config.git dest="/home/{{ item }}/.vim"
  with_items:
    - "{{ me }}"
    - "{{ ansible_ssh_user }}"
  register: result

- name: create sym links for vim
  file:
    src: /home/{{ item }}/.vim/vimrc
    dest: /home/{{ item }}/.vimrc
    owner: "{{ item }}"
    group: "{{ item }}"
    state: link
  with_items:
    - "{{ me }}"
    - "{{ ansible_ssh_user }}"

- name: finally check the owner ship of home dir
  file: path=/home/{{ item }} owner={{ item }} group={{ item }} recurse=yes
  changed_when: False
  with_items:
    - "{{ me }}"
    - "{{ ansible_ssh_user }}"




# install avahi ----------------------------------------------------------------

- name: install avahi deamon to become visible in the network
  apt: name=avahi-daemon

- name: update the avahi configuration for ssh
  template: src=ssh.service.j2 dest=/etc/avahi/services/ssh.service backup=yes
  notify:
    - reboot
    - waiting for come back

- name: update the avahi configuration for sftp
  template: src=sftp.service.j2 dest=/etc/avahi/services/sftp.service backup=yes
  notify:
    - reboot
    - waiting for come back

- name: avahi service
  service: name=avahi-daemon state=started enabled=yes




# update sshd configuration ----------------------------------------------------

- name: update the sshd configuration file to avoid login with password
  template: src=sshd_config.j2 dest=/etc/ssh/sshd_config backup=yes owner=0 group=0 mode=0644
  notify:
    - reboot
    - waiting for come back
